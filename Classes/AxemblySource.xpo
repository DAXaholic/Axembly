Exportfile for AOT version 1.0 or later
Formatversion: 1

***Element: CLS

; Microsoft Dynamics AX Class: AxemblySource unloaded
; --------------------------------------------------------------------------------
  CLSVERSION 1
  
  CLASS #AxemblySource
    PROPERTIES
      Name                #AxemblySource
      Extends             #
      RunOn               #Called from
    ENDPROPERTIES
    
    METHODS
      Version: 3
      SOURCE #classDeclaration
        #/// <summary>
        #///     Represents a chunk of source code in Axembly.
        #/// </summary>
        #/// <remarks>
        #///     Copyright (c) 2017 Aaron Kunz
        #///     https://github.com/DAXaholic/Axembly
        #/// </remarks>
        #final class AxemblySource
        #{
        #    str       m_Source;
        #    str       m_Language;
        #    container m_ReferencedAssemblies;
        #
        #    #Axembly
        #}
      ENDSOURCE
      SOURCE #getLanguage
        #public str getLanguage()
        #{
        #    ;
        #
        #    return m_Language;
        #}
      ENDSOURCE
      SOURCE #getReferencedAssemblies
        #public container getReferencedAssemblies()
        #{
        #    ;
        #
        #    return m_ReferencedAssemblies;
        #}
      ENDSOURCE
      SOURCE #getSource
        #public str getSource()
        #{
        #    ;
        #
        #    return m_Source;
        #}
      ENDSOURCE
      SOURCE #new
        #private void new()
        #{
        #    ;
        #}
      ENDSOURCE
      SOURCE #setLanguage
        #private void setLanguage(str _language)
        #{
        #    ;
        #
        #    m_Language = _language;
        #}
      ENDSOURCE
      SOURCE #setReferencedAssemblies
        #private void setReferencedAssemblies(container _referencedAssemblies)
        #{
        #    ;
        #
        #    m_ReferencedAssemblies = _referencedAssemblies;
        #}
      ENDSOURCE
      SOURCE #setSource
        #private void setSource(str _source)
        #{
        #    ;
        #
        #    m_Source = _source;
        #}
      ENDSOURCE
      SOURCE #concatSources
        #private static System.String concatSources(List _sources)
        #{
        #    System.Text.StringBuilder concatenatedSources;
        #    Enumerator                enmSource;
        #    AxemblySource             source;
        #    container                 referencedAssemblies;
        #    int                       i;
        #    str                       referencedAssembly;
        #    ;
        #
        #    concatenatedSources = new System.Text.StringBuilder();
        #    enmSource = _sources.getEnumerator();
        #    while (enmSource.moveNext())
        #    {
        #        source = enmSource.current();
        #        referencedAssemblies = source.getReferencedAssemblies();
        #        for (i = 1; i <= conlen(referencedAssemblies); i++)
        #        {
        #            referencedAssembly = conpeek(referencedAssemblies, i);
        #            concatenatedSources.AppendLine(referencedAssembly);
        #        }
        #        concatenatedSources.AppendLine(source.getSource());
        #    }
        #    return concatenatedSources.ToString();
        #}
      ENDSOURCE
      SOURCE #construct
        #private static server AxemblySource construct()
        #{
        #    ;
        #
        #    return new AxemblySource();
        #}
      ENDSOURCE
      SOURCE #newFromCsSource
        #/// <summary>
        #///     Creates a new instance for a chunk of C# code.
        #/// </summary>
        #/// <param name="_source">
        #///     The string representing the chunk of C# code.
        #/// </param>
        #/// <returns>
        #///     The newly created instance.
        #/// </returns>
        #public static server AxemblySource newFromCsSource(str _source)
        #{
        #    ;
        #
        #    return AxemblySource::newFromSourceOfLanguage(_source, #LanguageCs);
        #}
      ENDSOURCE
      SOURCE #newFromCsSourceAndRefAssemblies
        #/// <summary>
        #///     Creates a new instance for a chunk of C# code.
        #/// </summary>
        #/// <param name="_source">
        #///     The string representing the chunk of C# code.
        #/// </param>
        #/// <param name="_referencedAssemblies">
        #///     A container of strings representing references to additional assemblies the C# code
        #///     needs in order to successfully compile.
        #/// </param>
        #/// <returns>
        #///     The newly created instance.
        #/// </returns>
        #public static server AxemblySource newFromCsSourceAndRefAssemblies(
        #    str       _source,
        #    container _referencedAssemblies)
        #{
        #    ;
        #
        #    return AxemblySource::newFromSourceOfLanguageAndRefAssemblies(
        #        _source,
        #        #LanguageCs,
        #        _referencedAssemblies);
        #}
      ENDSOURCE
      SOURCE #newFromSourceOfLanguage
        #public static server AxemblySource newFromSourceOfLanguage(
        #    str _source,
        #    str _language)
        #{
        #    ;
        #
        #    return AxemblySource::newFromSourceOfLanguageAndRefAssemblies(
        #        _source,
        #        _language,
        #        connull());
        #}
      ENDSOURCE
      SOURCE #newFromSourceOfLanguageAndRefAssemblies
        #public static server AxemblySource newFromSourceOfLanguageAndRefAssemblies(
        #    str       _source,
        #    str       _language,
        #    container _referencedAssemblies)
        #{
        #    AxemblySource instance;
        #    ;
        #
        #    instance = AxemblySource::construct();
        #    instance.setSource(_source);
        #    instance.setLanguage(_language);
        #    instance.setReferencedAssemblies(_referencedAssemblies);
        #    return instance;
        #}
      ENDSOURCE
      SOURCE #newFromVbSource
        #/// <summary>
        #///     Creates a new instance for a chunk of VB.NET code.
        #/// </summary>
        #/// <param name="_source">
        #///     The string representing the chunk of VB.NET code.
        #/// </param>
        #/// <returns>
        #///     The newly created instance.
        #/// </returns>
        #public static server AxemblySource newFromVbSource(Source _source)
        #{
        #    ;
        #
        #    return AxemblySource::newFromSourceOfLanguage(_source, #LanguageVb);
        #}
      ENDSOURCE
      SOURCE #newFromVbSourceAndRefAssemblies
        #/// <summary>
        #///     Creates a new instance for a chunk of VB.NET code.
        #/// </summary>
        #/// <param name="_source">
        #///     The string representing the chunk of VB.NET code.
        #/// </param>
        #/// <param name="_referencedAssemblies">
        #///     A container of strings representing references to additional assemblies the VB.NET
        #///     code needs in order to successfully compile.
        #/// </param>
        #/// <returns>
        #///     The newly created instance.
        #/// </returns>
        #public static server AxemblySource newFromVbSourceAndRefAssemblies(
        #    Source    _source,
        #    container _referencedAssemblies)
        #{
        #    ;
        #
        #    return AxemblySource::newFromSourceOfLanguageAndRefAssemblies(
        #        _source,
        #        #LanguageVb,
        #        _referencedAssemblies);
        #}
      ENDSOURCE
      SOURCE #sha1FromSources
        #public static AxemblySha1 sha1FromSources(List _sources)
        #{
        #    System.String                     sourceString;
        #    System.Text.Encoding              utf8Encoding;
        #    System.Byte[]                     utf8StrBytes;
        #    System.Security.Cryptography.SHA1 sha1;
        #    System.Byte[]                     hashBytes;
        #    System.String                     hashAsHexStr;
        #    str                               ret;
        #    ;
        #
        #    new InteropPermission(InteropKind::ClrInterop).assert();
        #
        #    sourceString = AxemblySource::concatSources(_sources);
        #    utf8Encoding = System.Text.Encoding::get_UTF8();
        #    utf8StrBytes = utf8Encoding.GetBytes(sourceString);
        #
        #    sha1 = System.Security.Cryptography.SHA1::Create();
        #    hashBytes = sha1.ComputeHash(utf8StrBytes);
        #    hashAsHexStr = System.BitConverter::ToString(hashBytes);
        #    ret = hashAsHexStr.Replace('-', '');
        #
        #    return ret;
        #}
      ENDSOURCE
    ENDMETHODS
  ENDCLASS

***Element: END
